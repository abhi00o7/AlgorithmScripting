// Return an English translated sentence of the passed binary string.

// The binary string will be space separated.

function binaryAgentDecode(str) {
    return str
        .split(' ')
        .map(item => String.fromCharCode(parseInt(item, 2)))
        .join('')

}

console.log(binaryAgentDecode("01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111"))

// test cases

//   binaryAgentDecode("01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111") // should return the string Aren't bonfires fun!?

// Passed
// binaryAgentDecode("01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001")// should return the string I love FreeCodeCamp!

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators

function createBinaryString(nMask) {
    // nMask must be between -2147483648 and 2147483647
    if (nMask > 2 ** 31 - 1)
        throw "number too large. number shouldn't be > 2**31-1"; //added
    if (nMask < -1 * (2 ** 31))
        throw "number too far negative, number shouldn't be < 2**31" //added
    for (var nFlag = 0, nShifted = nMask, sMask = ''; nFlag < 32; nFlag++, sMask += String(nShifted >>> 31), nShifted <<= 1);
    sMask = sMask.replace(/\B(?=(.{8})+(?!.))/g, " ") // added
    return sMask;
}


function binaryAgentEncode(str) {
    return str
        .split('')
        .map((item) => createBinaryString(item.charCodeAt(0)))
        .join(' ')

}

console.log(binaryAgentEncode('This is encoding')) //should return

console.log(binaryAgentDecode